const fs = require('fs')
const ejs = require('ejs')
const path = require('path')

class Compiler {
  constructor (config) {
    // save webpack configuration
    this.config = config
    // save modules by { path as key, code as value }
    this.modules = {}
  }

  run (path) {
    this.buildModule()
    this.emitFile()
  }

  buildModule () {
    const code = this.getSource(this.config.entry)
    // save code into modules
    this.modules[this.config.entry] = code
  }

  getSource (path) {
    return fs.readFileSync(path, 'utf-8')
  }

  emitFile () {
    // get ejs template
    const template = fs.readFileSync(path.resolve(__dirname, 'main.ejs'), 'utf-8')
    // replace contents in the template
    const code = ejs.render(template, { entryId: this.config.entry, modules: this.modules })
    // write result into file
    const outputDir = this.config.output.path
    // create output directory if not exist
    if (!fs.existsSync(outputDir)) {
      fs.mkdirSync(outputDir)
    }
    fs.writeFileSync(path.resolve(outputDir, this.config.output.filename), code)
  }
}

module.exports = Compiler
